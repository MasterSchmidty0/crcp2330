class Cell {
	field int x, y;
	field int size;

	constructor Cell new(int Ax, int Ay, int Asize) {
		let x = Ax;
		let y = Ay;
		let size = Asize;

		do draw();

		return this;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	method void draw() {
		do Screen.setColor(true);
		do Screen.drawCircle(x, y, size);
		return;
	}

	method void erase() {
		do Screen.setColor(false);
		do Screen.drawCircle(x, y, size);
		return;
	}

	method void eat(Cell other) {
		if ((x = other.x) & (y = other.y)) {
			size = size + other.size;
		}
		return;
	}

	method void moveUp() {
		if ((y - size) > 1) {
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, size);
			let y = y - 2;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, size);
		}
		return;
	}

	method void moveDown() {
		if ((y + size) < 254) {
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, size);
			let y = y + 2;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, size);
		}
		return;
	}

	method void moveLeft() {
		if ((x - size) > 1) {
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, size);
			let x = x - 2;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, size);
		}
		return;
	}

	method void moveRight() {
		if ((x + size) < 510) {
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, size);
			let x = x + 2;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, size);		}
		return;
	}
}